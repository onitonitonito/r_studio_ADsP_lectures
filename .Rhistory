kingstimeseriesdiff2 <- diff(kingstimeseries, differences = 2)
kingstimeseriesdiff3 <- diff(kingstimeseries, differences = 3)
kingstimeseriesdiff1
kingstimeseriesdiff2
kingstimeseriesdiff3
par(mfrow=c(2,2))
plot.ts(kingstimeseriesdiff1)           #1?? ?????? ????, ???հ? ?л??? ?ð??? ??��???? ??��
plot.ts(kingstimeseriesdiff2)
plot.ts(kingstimeseriesdiff3)
mean(kingstimeseriesdiff1)
sd(kingstimeseriesdiff1)
mean(kingstimeseriesdiff2)
sd(kingstimeseriesdiff2)
mean(kingstimeseriesdiff3)
sd(kingstimeseriesdiff3)
# ARIMA ???? ??��?ϱ? ARIMA(p, 1, q)
# acf?Լ??? pacf ?Լ??? ?????Ͽ? ???? ??��?ϱ?
par(mfrow=c(2,2))
acf(kingstimeseriesdiff1, lag.max=20)          #1?? ?????? ?????ͷ? (ACF) Ȯ??
acf(kingstimeseriesdiff1, lag.max=20)
#--- lag = 0 ??���� ???? ??��
#--- lag = 1 ?? ??��?? ��?? ?????ۿ? ??��
#--- lag = 2 ?? ??��???? ???? ��?? ?????ȿ? ??�� lag?? 2???? ????���� ???? -> MA(1)????
pacf(kingstimeseriesdiff1, lag.max=20)         #1?? ?????? ?????ͷ? (PACF) Ȯ??
pacf(kingstimeseriesdiff1, lag.max=20)
#pacf(kingstimeseriesdiff1, lag.max=20, plot=FALSE)
#--- lag = 0 ??���� ?ڷ? ??��
#--- lag = 1, 2, 3 ??��?? ��?? ?????ۿ? ??��
#--- lag = 4 ?? ??��???? ???? ��?? ?????ȿ? ??�� lag?? 4???? ????���� ???? -> AR(3) 모형
# forecast package ?? ?????? auto.arima ?Լ??? ?̿??? ???? ã??
auto.arima(kings)
#--- ARIMA(0, 1, 1) �� ???? ?????? ????��?? ????
#  ARIMA ????�� ???? ?̷? ?????ϱ?
# ARIMA????��?? ?????? ??��?ϱ?(fitting)
kingstimeseriesARIMA<- arima(kingstimeseries, order=c(0, 1, 1))
kingstimeseriesARIMA
# forecast.Arima ?Լ??? ???? ?̷? ?????ϱ?
kingstimeseriesforecasts<-forecast.Arima(kingstimeseriesARIMA)
kingstimeseriesforecasts
# 5??�� ?????ϰ??? ?Ѵٸ? h=5?? ??��????
kingstimeseriesforecasts<-forecast.Arima(kingstimeseriesARIMA,h=5)
kingstimeseriesforecasts
# ?̷? ?????? ???? ??ǥ ?׸???
plot.forecast(kingstimeseriesforecasts)
rm(list=ls())
getwd()
##-----------------------------------------------------------------------------
## chpt 3. time series
##-----------------------------------------------------------------------------
#install.packages("TTR")
library(TTR)
#install.packages("forecast")
library(forecast)
#------------------------------------------------------------------
# decompose non-seasonal data
# ???? ?յ??? ???��? ???? ??????
#------------------------------------------------------------------
kings <- c(60, 43, 67, 50, 56, 42, 50, 65, 68, 43,
65, 34, 47, 34, 49, 41, 13, 35, 53, 56,
16, 43, 69, 59, 48, 59, 86, 55, 68, 51,
33, 49, 67, 77, 81, 67, 71, 81, 68, 70,
77, 56)
### ----------------------------------------------------------------
#kings <- read.table("http://robjhyndman.com/tsdldata/misc/kings.dat", header=TRUE, sep=",",
#                   stringsAsFactors=FALSE, na.strings=c('NIL'),
#                   comment.char="#", encoding="UTF-8")
#kings <- scan("http://robjhyndman.com/tsdldata/misc/kings.dat")
#write.table(data, file="data/data.csv", append=FALSE, quote=FALSE, sep=",", row.names=FALSE)
### ----------------------------------------------------------------
kingstimeseries <- ts(kings)            #ts?Լ??? Ȱ???Ͽ? ?????͸? ?ð迭?????ͷ? ??ȯ
"____ (SET) TIME SERIES DATA ___
Time Series:
Start = 1
End = 42
Frequency = 1
"
kingstimeseries
head(kingstimeseries)
summary(kingstimeseries)
plot.ts(kingstimeseries)                #plot.ts ?Լ??? Ȱ???Ͽ? ?ð迭?????͸? ????ȭ
#SMA ?Լ??? ?̿??? ?????? ?ð迭?? Ʈ???带 ?????ִ? ???ؽð迭?? ?̵????? ?׷??? ?׸???
kingstimeseriesSMA3 <- SMA(kingstimeseries,n=3)
plot.ts(kingstimeseriesSMA3)
kingstimeseriesSMA8<-SMA(kingstimeseries,n=8)
plot.ts(kingstimeseriesSMA8)
kingstimeseriesSMA12<-SMA(kingstimeseries,n=12)
plot.ts(kingstimeseriesSMA12)
par(mfrow=c(2,2))                        #?ϳ??? ?׷??? ȭ?鿡 ?Բ? ǥ???ϱ?
plot.ts(kingstimeseries)
plot.ts(kingstimeseriesSMA3)
plot.ts(kingstimeseriesSMA8)
plot.ts(kingstimeseriesSMA12)
#?????Ͽ? ��???? Ȯ???ϱ? (difference)
# diff ?Լ??? Ȱ???Ͽ? ?????? ?????ϱ?
kingstimeseriesdiff1 <- diff(kingstimeseries, differences = 1)
kingstimeseriesdiff2 <- diff(kingstimeseries, differences = 2)
kingstimeseriesdiff3 <- diff(kingstimeseries, differences = 3)
kingstimeseriesdiff1
kingstimeseriesdiff2
kingstimeseriesdiff3
par(mfrow=c(2,2))
plot.ts(kingstimeseriesdiff1)           #1?? ?????? ????, ???հ? ?л??? ?ð??? ??��???? ??��
plot.ts(kingstimeseriesdiff2)
plot.ts(kingstimeseriesdiff3)
mean(kingstimeseriesdiff1)
sd(kingstimeseriesdiff1)
mean(kingstimeseriesdiff2)
sd(kingstimeseriesdiff2)
mean(kingstimeseriesdiff3)
sd(kingstimeseriesdiff3)
# ARIMA ???? ??��?ϱ? ARIMA(p, 1, q)
# acf?Լ??? pacf ?Լ??? ?????Ͽ? ???? ??��?ϱ?
par(mfrow=c(2,2))
acf(kingstimeseriesdiff1, lag.max=20)          #1?? ?????? ?????ͷ? (ACF) Ȯ??
acf(kingstimeseriesdiff1, lag.max=20)
#--- lag = 0 ??���� ???? ??��
#--- lag = 1 ?? ??��?? ��?? ?????ۿ? ??��
#--- lag = 2 ?? ??��???? ???? ��?? ?????ȿ? ??�� lag?? 2???? ????���� ???? -> MA(1)????
pacf(kingstimeseriesdiff1, lag.max=20)         #1?? ?????? ?????ͷ? (PACF) Ȯ??
pacf(kingstimeseriesdiff1, lag.max=20)
#pacf(kingstimeseriesdiff1, lag.max=20, plot=FALSE)
#--- lag = 0 ??���� ?ڷ? ??��
#--- lag = 1, 2, 3 ??��?? ��?? ?????ۿ? ??��
#--- lag = 4 ?? ??��???? ???? ��?? ?????ȿ? ??�� lag?? 4???? ????���� ???? -> AR(3) 모형
# forecast package ?? ?????? auto.arima ?Լ??? ?̿??? ???? ã??
auto.arima(kings)
#--- ARIMA(0, 1, 1) �� ???? ?????? ????��?? ????
#  ARIMA ????�� ???? ?̷? ?????ϱ?
# ARIMA????��?? ?????? ??��?ϱ?(fitting)
kingstimeseriesARIMA<- arima(kingstimeseries, order=c(0, 1, 1))
kingstimeseriesARIMA
# forecast.Arima ?Լ??? ???? ?̷? ?????ϱ?
kingstimeseriesforecasts<-forecast.Arima(kingstimeseriesARIMA)
kingstimeseriesforecasts
# 5??�� ?????ϰ??? ?Ѵٸ? h=5?? ??��????
kingstimeseriesforecasts<-forecast.Arima(kingstimeseriesARIMA,h=5)
kingstimeseriesforecasts
# ?̷? ?????? ???? ??ǥ ?׸???
plot.forecast(kingstimeseriesforecasts)
rm(list=ls())
getwd()
#install.packages("TTR")
library(TTR)
#install.packages("forecast")
library(forecast)
kings <- c(60, 43, 67, 50, 56, 42, 50, 65, 68, 43,
65, 34, 47, 34, 49, 41, 13, 35, 53, 56,
16, 43, 69, 59, 48, 59, 86, 55, 68, 51,
33, 49, 67, 77, 81, 67, 71, 81, 68, 70,
77, 56)
kingstimeseries <- ts(kings)            #ts?Լ??? Ȱ???Ͽ? ?????͸? ?ð迭?????ͷ? ??ȯ
"____ (SET) TIME SERIES DATA ___
Time Series:
Start = 1
End = 42
Frequency = 1
"
kingstimeseries
head(kingstimeseries)
summary(kingstimeseries)
plot.ts(kingstimeseries)                #plot.ts ?Լ??? Ȱ???Ͽ? ?ð迭?????͸? ????ȭ
#SMA ?Լ??? ?̿??? ?????? ?ð迭?? Ʈ???带 ?????ִ? ???ؽð迭?? ?̵????? ?׷??? ?׸???
kingstimeseriesSMA3 <- SMA(kingstimeseries,n=3)
plot.ts(kingstimeseriesSMA3)
kingstimeseriesSMA8<-SMA(kingstimeseries,n=8)
plot.ts(kingstimeseriesSMA8)
kingstimeseriesSMA12<-SMA(kingstimeseries,n=12)
plot.ts(kingstimeseriesSMA12)
par(mfrow=c(2,2))                        #?ϳ??? ?׷??? ȭ?鿡 ?Բ? ǥ???ϱ?
plot.ts(kingstimeseries)
plot.ts(kingstimeseriesSMA3)
plot.ts(kingstimeseriesSMA8)
plot.ts(kingstimeseriesSMA12)
kingstimeseriesdiff1 <- diff(kingstimeseries, differences = 1)
kingstimeseriesdiff2 <- diff(kingstimeseries, differences = 2)
kingstimeseriesdiff3 <- diff(kingstimeseries, differences = 3)
kingstimeseriesdiff1
kingstimeseriesdiff2
kingstimeseriesdiff3
par(mfrow=c(2,2))
plot.ts(kingstimeseriesdiff1)           #1?? ?????? ????, ???հ? ?л??? ?ð??? ??��???? ??��
plot.ts(kingstimeseriesdiff2)
plot.ts(kingstimeseriesdiff3)
mean(kingstimeseriesdiff1)
sd(kingstimeseriesdiff1)
mean(kingstimeseriesdiff2)
sd(kingstimeseriesdiff2)
mean(kingstimeseriesdiff3)
sd(kingstimeseriesdiff3)
par(mfrow=c(2,2))
acf(kingstimeseriesdiff1, lag.max=20)          #1?? ?????? ?????ͷ? (ACF) Ȯ??
acf(kingstimeseriesdiff1, lag.max=20)
pacf(kingstimeseriesdiff1, lag.max=20)         #1?? ?????? ?????ͷ? (PACF) Ȯ??
pacf(kingstimeseriesdiff1, lag.max=20)
auto.arima(kings)
kingstimeseriesARIMA<- arima(kingstimeseries, order=c(0, 1, 1))
kingstimeseriesARIMA
kingstimeseriesforecasts<-forecast.Arima(kingstimeseriesARIMA)
#install.packages("forecast")
library(forecast)
kingstimeseriesforecasts<-forecast.Arima(kingstimeseriesARIMA)
kingstimeseriesforecasts<-forecast(kingstimeseriesARIMA)
kingstimeseriesforecasts
kingstimeseriesforecasts<-forecast.Arima(kingstimeseriesARIMA,h=5)
kingstimeseriesforecasts<-forecast(kingstimeseriesARIMA)
kingstimeseriesforecasts
kingstimeseriesforecasts<-forecast(kingstimeseriesARIMA,h=5)
kingstimeseriesforecasts
plot.forecast(kingstimeseriesforecasts)
plot(kingstimeseriesforecasts)
par(mfrow=c(1,1))
plot(kingstimeseriesforecasts)
rm(list=ls())
getwd()
births <- scan("http://robjhyndman.com/tsdldata/data/nybirths.dat")
births
head(births)
#???? ?????? ?????? ?ð迭?ڷ??? ??ȯ
birthstimeseries <- ts(births, frequency=12, start=c(1946, 1))
head(birthstimeseries)
plot.ts(birthstimeseries)
#--- ????���� ???? ?ð迭 ?ڷ???
#--- 1~3?????? ?????? ???? ?????ϰ? ???? ?ٽ? ???????ٰ?
#--- 9~12???? ?ٽ? ????
#--- ??????�� ???? ?ð迭?ڷ??? ???⼺, ??????, ?ұ?Ģ?? ???ҷ? ??????
?
# ?ð迭 ?ڷḦ ???Һ??? ?????ϱ?
birthstimeseriescomponents <- decompose(birthstimeseries)
#--- ????���� ???? ?ð迭 ?ڷ???
#--- 1~3?????? ?????? ???? ?????ϰ? ???? ?ٽ? ???????ٰ?
#--- 9~12???? ?ٽ? ????
#--- ??????�� ???? ?ð迭?ڷ??? ???⼺, ??????, ?ұ?Ģ?? ???ҷ? ??????
birthstimeseriescomponents <- decompose(birthstimeseries)
plot(birthstimeseriescomponents)
plot(birthstimeseriescomponents)
birthstimeseriescomponents$x
birthstimeseriescomponents$trend
birthstimeseriescomponents$seasonal
birthstimeseriescomponents$random
# ?ð迭 ?ڷῡ?? ??��?? ???Ҹ? ��???ϱ?
birthstimeseries_seasonally_adjusted<-birthstimeseries -birthstimeseriescomponents$seasonal
plot(birthstimeseries_seasonally_adjusted)
# diff ?Լ??? Ȱ???Ͽ? ?????? ?????ϱ?
births_adjusted <- birthstimeseries_seasonally_adjusted
births_adjusted_diff1 <- diff(births_adjusted, differences = 1)
#1?? ?????? ????, ???հ? ?л??? ?ð??? ??��???? ?ʴ? ??��?? ??��?ϰ? ????
plot.ts(births_adjusted_diff1)
mean(births_adjusted_diff1)
sd(births_adjusted_diff1)
acf(births_adjusted_diff1, lag.max=100)          #1?? ?????? ?????ͷ? (ACF) Ȯ??
pacf(births_adjusted_diff1, lag.max=100)         #1?? ?????? ?????ͷ? (PACF) Ȯ??
par(mfrow=c(2,1))
acf(births_adjusted_diff1, lag.max=100)          #1?? ?????? ?????ͷ? (ACF) Ȯ??
pacf(births_adjusted_diff1, lag.max=100)         #1?? ?????? ?????ͷ? (PACF) Ȯ??
par(mfrow=c(1,2))
acf(births_adjusted_diff1, lag.max=100)          #1?? ?????? ?????ͷ? (ACF) Ȯ??
pacf(births_adjusted_diff1, lag.max=100)         #1?? ?????? ?????ͷ? (PACF) Ȯ??
par(mfrow=c(2,1))
acf(births_adjusted_diff1, lag.max=100)          #1?? ?????? ?????ͷ? (ACF) Ȯ??
pacf(births_adjusted_diff1, lag.max=100)         #1?? ?????? ?????ͷ? (PACF) Ȯ??
auto.arima(births)
birthstimeseriesARIMA<- arima(birthstimeseries, order=c(1, 1, 0))
birthstimeseriesARIMA
birthstimeseriesforecasts<-forecast.Arima(birthstimeseriesARIMA)
birthstimeseriesforecasts<-forecast(birthstimeseriesARIMA)
birthstimeseriesforecasts
# ?̷? ?????? ???? ??ǥ ?׸???
par(mfrow=c(2,1))
plot(birthstimeseriesforecasts)
forecast(birthstimeseries, h=12)
plot(forecast(birthstimeseries, h=12))
getwd()
rm(list=rm())
rm(list=rm())
rm(list=rs())
rm(list=ls())
getwd()
# csv ???? ?ҷ??��? (file importing)
f_2007 <- read.csv("D:\\My Documents\\GitHub\\r_studio_ADsP_lectures\\_static",
header = TRUE, stringsAsFactors = FALSE)
getwd()
# csv ???? ?ҷ??��? (file importing)
f_2007 <- read.csv("./_static\\finance_2007.csv",
header = TRUE, stringsAsFactors = FALSE)
# ǥ??ȭ ??ȯ (standardization)
f_2007 <- transform(f_2007,
V1_s = scale(V1),
V2_s = scale(V2),
V3_s = scale(V3),
V4_s = scale(V4),
V5_s = scale(V5))
# variable selection
f_2007_2 <-f_2007[,c("company", "V1_s", "V2_s", "V3_s", "V4_s", "V5_s")]
head(f_2007_2)
head(f_2007)
head(f_2007)
head(f_2007)
head(f_2007_2)
# Correlation analysis
cor(f_2007_2[,-1])
# Scatter plot matrix
# 스캐터 챠드 확인
plot(f_2007_2[,-1])
summary(secu_prcomp)
# 주성분분석 PCA(Principal Component Analysis)
secu_prcomp <- prcomp(f_2007_2[,c(2:6)]) # 첫번째 회사명은 제외(2~6컬럼)
summary(secu_prcomp)
# Biplot
biplot(secu, cex = c(0.7, 0.8))
print(secu_prcomp)
rm(list=ls())
getwd()
#############################################
#
#   ???????? PCA ??�� 2
#
#############################################
# csv ???? ?ҷ??��? (file importing)
f_2007 <- read.csv("./_static\\finance_2007.csv",
header = TRUE, stringsAsFactors = FALSE)
head(f_2007)
# 6개 증권사현황 = 교보,메리츠,대신,대우,동부,SK
# V1 : 총자본순이익율
# V2 : 자기자본순이익율
# V3 : 자기자본비율
# V4 : 부채비율
# V5 : 자기자본회전율
# 표준화 변환 (standardization)
f_2007 <- transform(f_2007,
V1_s = scale(V1),
V2_s = scale(V2),
V3_s = scale(V3),
V4_s = scale(V4),
V5_s = scale(V5))
# variable selection
f_2007_2 <-f_2007[,c("company", "V1_s", "V2_s", "V3_s", "V4_s", "V5_s")]
head(f_2007_2)
# 상관관계(Correlation)분석
cor(f_2007_2[,-1])
round(cor(f_2007_2[,-1]), digits=3) # ?ݿø?
# Scatter plot matrix
# 스캐터 챠드 확인
plot(f_2007_2[,-1])
# 주성분분석 PCA(Principal Component Analysis)
secu_prcomp <- prcomp(f_2007_2[,c(2:6)]) # 첫번째 회사명은 제외(2~6컬럼)
summary(secu_prcomp)
print(secu_prcomp)
# Scree Plot
plot(secu_prcomp, type="l",
sub = "Scree Plot")
# Biplot
biplot(secu_prcomp, cex = c(0.7, 0.8))
# 관측치별 주성분1, 주성분2 점수 계산(PC1 score, PC2 score)
secu_pc1 <- predict(secu_prcomp)[,1]
secu_pc2 <- predict(secu_prcomp)[,2]
# ????ġ?? ?̸? ????(rownames mapping)
text(secu_pc1, secu_pc2, labels = f_2007_2$company,
cex = 0.7, pos = 3, col = "blue")
rm(list=ls())
getwd()
pca <- function(dataset){
pc = prcomp(dataset, scale = TRUE)
k = 0
R = 0
while(R < 0.8) {
k = k + 1
R = sum(pc[[1]][1:k]^2)/sum(pc[[1]]^2)
cat("When number of Principal Component(k) is ", k,
", Cummulative Proportion(R) is ", R, "\n", "\n", sep="")
}
SelectedDataSet = pc[[5]][,1:k]
return(SelectedDataSet)
}
pca(f_2007_2[,c(2:6)])
rm(list=ls())
getwd()
#############################################
#
#   ???????? PCA ??�� 2
#
#############################################
# csv ???? ?ҷ??��? (file importing)
f_2007 <- read.csv("./_static\\finance_2007.csv",
header = TRUE, stringsAsFactors = FALSE)
head(f_2007)
# 6개 증권사현황 = 교보,메리츠,대신,대우,동부,SK
# V1 : 총자본순이익율
# V2 : 자기자본순이익율
# V3 : 자기자본비율
# V4 : 부채비율
# V5 : 자기자본회전율
# 표준화 변환 (standardization)
f_2007 <- transform(f_2007,
V1_s = scale(V1),
V2_s = scale(V2),
V3_s = scale(V3),
V4_s = scale(V4),
V5_s = scale(V5))
# variable selection
f_2007_2 <-f_2007[,c("company", "V1_s", "V2_s", "V3_s", "V4_s", "V5_s")]
head(f_2007_2)
# 상관관계(Correlation)분석
cor(f_2007_2[,-1])
round(cor(f_2007_2[,-1]), digits=3) # ?ݿø?
# Scatter plot matrix
# 스캐터 챠드 확인
plot(f_2007_2[,-1])
# 주성분분석 PCA(Principal Component Analysis)
secu_prcomp <- prcomp(f_2007_2[,c(2:6)]) # 첫번째 회사명은 제외(2~6컬럼)
summary(secu_prcomp)
print(secu_prcomp)
# Scree Plot
plot(secu_prcomp, type="l",
sub = "Scree Plot")
# Biplot
biplot(secu_prcomp, cex = c(0.7, 0.8))
# 관측치별 주성분1, 주성분2 점수 계산(PC1 score, PC2 score)
secu_pc1 <- predict(secu_prcomp)[,1]
secu_pc2 <- predict(secu_prcomp)[,2]
# 그래프상에 관측치별 이름 매핑(rownames mapping)
text(secu_pc1, secu_pc2, labels = f_2007_2$company,
cex = 0.7, pos = 3, col = "blue")
###########################################################
## PCA (Principal Component Analysis)
## User Defined Function
##  - finding PC k which Cummulative Proportion is over 0.8
###########################################################
pca <- function(dataset){
pc = prcomp(dataset, scale = TRUE)
k = 0
R = 0
while(R < 0.8) {
k = k + 1
R = sum(pc[[1]][1:k]^2)/sum(pc[[1]]^2)
cat("When number of Principal Component(k) is ", k,
", Cummulative Proportion(R) is ", R, "\n", "\n", sep="")
}
SelectedDataSet = pc[[5]][,1:k]
return(SelectedDataSet)
}
pca(f_2007_2[,c(2:6)])
## PCA for College data
data(College)
#############################################
#
#   주성분분석 (PCA: Principal Component Analysis)
#
#############################################
library(datasets)
## PCA for College data
data(College)
install.packages("ISLR")
rm(list=ls())
getwd()
library(MASS)
loc<-cmdscale(eurodist)
x<-loc[,1]
y<- -loc[,2]
plot(x,y,type="n",asp=1,main="Metric MDS")
loc<-cmdscale(eurodist)
x<-loc[,1]
y<- -loc[,2]
plot(x,y,type="n",asp=1,main="Metric MDS")
data("eurodist")
loc<-cmdscale(eurodist)
x<-loc[,1]
y<- -loc[,2]
plot(x,y,type="n",asp=1,main="Metric MDS")
library(MASS)
data("eurodist")
loc<-cmdscale(eurodist)
x<-loc[,1]
y<- -loc[,2]
plot(x,y,type="n",asp=1,main="Metric MDS")
plot(x,y,type="n",asp=1,main="Metric MDS")
text(x,y,rownames(loc),cex=0.9)
abline(v=0, h=0, lty=2, lwd=0.5)
head(eurodist)
summary(eurodist)
eurodist
eurodist
data(mtcars)
mt<-mtcars
mt.x<-as.matrix(mt[,-1])
mt.dist<-dist(mt.x)
loc<-cmdscale(mt.dist)
plot(loc[,1],loc[,2],type="n",asp=1,main="Metric MDS")
text(loc[,1],loc[,2],rownames(loc),cex=0.7)
abline(v=0, h=0, lty=2, lwd=0.5)
head(mtcars)
#############################################
#
#   주성분분석 (PCA: Principal Component Analysis)
#
#############################################
library(datasets)
data(USArrests)
pairs(USArrests, panel=panel.smooth,
main="USArrests data")
summary(US.prin)
data(USArrests)
pairs(USArrests, panel=panel.smooth,
main="USArrests data")
US.prin <- princomp(USArrests,cor=TRUE)
summary(US.prin)
screeplot(US.prin,npcs=5, type="lines")
loadings(US.prin)
US.prin$scores
biplot(US.prin)
rm(list=ls())
getwd()
library(MASS)
